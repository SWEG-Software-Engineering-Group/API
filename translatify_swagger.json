{
    "swagger": "2.0",
    "info": {
        "version": "2023-04-26T22:52:12Z",
        "title": "api-progetto-dev"
    },
    "host": "iibte10n05.execute-api.eu-west-2.amazonaws.com",
    "basePath": "/dev",
    "schemes": [
        "https"
    ],
    "paths": {
        "/tenant/allTenants": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Return all the tenants",
                        "schema": {
                            "$ref": "#/definitions/Tenants"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/GenericError"
                        }
                    },
                    "401":{
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Unauthorized"
                        }
                    }
                },
                "security": [
                    {
                        "2_tleAXoqbb": []
                    }
                ],
                "x-amazon-apigateway-integration": {
                    "httpMethod": "POST",
                    "uri": "arn:aws:apigateway:eu-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-2:574522373582:function:api-progetto-dev-getAllTenants/invocations",
                    "passthroughBehavior": "when_no_match",
                    "type": "aws_proxy"
                },
                "description": "Return all the tenants with their info."
            }
        },
        "/tenant/{TenantId}/info": {
            "get": {
                "parameters": [
                    {
                        "name": "TenantId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Id of the tenant where to get the info"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return the info of the tenant",
                        "schema": {
                            "$ref": "#/definitions/Tenant"
                        }                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/GenericError"
                        }
                    },
                    "401":{
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Unauthorized"
                        }
                    }
                },
                "security": [
                    {
                        "2_tleAXoqbb": []
                    }
                ],
                "x-amazon-apigateway-integration": {
                    "httpMethod": "POST",
                    "uri": "arn:aws:apigateway:eu-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-2:574522373582:function:api-progetto-dev-getTenant/invocations",
                    "passthroughBehavior": "when_no_match",
                    "type": "aws_proxy"
                },
                "description": "Get the info of a tenant."
            }
        },
        "/tenant/{TenantId}/admins": {
            "get":{
                "parameters":[
                    {
                        "name":"TenantId",
                        "in":"path",
                        "required":true,
                        "type":"string",
                        "description":"Id of the tenant where to get the admins"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Return the list ofaaa admins of the tenant",
                        "schema":{
                            "$ref":"#/definitions/TenantAdmins"
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "schema":{
                            "$ref":"#/definitions/GenericError"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/Unauthorized"
                        }
                    }
                },
                "security":[
                    {
                        "2_tleAXoqbb":[]
                    }
                ],
                "x-amazon-apigateway-integration":{
                    "httpMethod":"POST",
                    "uri":"arn:aws:apigateway:eu-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-2:574522373582:function:api-progetto-dev-getTenantAdmins/invocations",
                    "passthroughBehavior":"when_no_match",
                    "type":"aws_proxy"
                },
                "description":"Get the list of admins of a tenant."
            }
        },
        "/tenant/{TenantId}/users": {
            "get":{
                "parameters":[
                    {
                        "name":"TenantId",
                        "in":"path",
                        "required":true,
                        "type":"string",
                        "description":"Id of the tenant where to get the users"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Return the list of users of the tenant",
                        "schema":{
                            "$ref":"#/definitions/TenantUsers"
                        }
                    },
                    "400":{
                        "description":"Bad Request",
                        "schema":{
                            "$ref":"#/definitions/GenericError"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/Unauthorized"
                        }
                    }
                },
                "security":[
                    {
                        "2_tleAXoqbb":[]
                    }
                ],
                "x-amazon-apigateway-integration":{
                    "httpMethod":"POST",
                    "uri":"arn:aws:apigateway:eu-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-2:574522373582:function:api-progetto-dev-getTenantAdmins/invocations",
                    "passthroughBehavior":"when_no_match",
                    "type":"aws_proxy"
                },
                "description":"Get the list of users of a tenant."
            }
        },
        "/tenant/{TenantId}/secondaryLanguages": {
            "get": {
                "parameters": [
                    {
                        "name": "TenantId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Id of the tenant where to get the secondary languages"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return the list of languages of the tenant",
                        "schema": {
                            "$ref": "#/definitions/AddLanguagesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/GenericError"
                        }
                    },
                    "401":{
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Unauthorized"
                        }
                    }
                },
                "security": [
                    {
                        "2_tleAXoqbb": []
                    }
                ],
                "x-amazon-apigateway-integration": {
                    "httpMethod": "POST",
                    "uri": "arn:aws:apigateway:eu-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-2:574522373582:function:api-progetto-dev-getTenantLanguages/invocations",
                    "passthroughBehavior": "when_no_match",
                    "type": "aws_proxy"
                },
                "description": "Get the list of languages of a tenant."
            }
        },
        "/tenant/{TenantId}/allCategories":{
            "get": {
                "description": "Get the list of categories of a tenant.",
                "parameters": [
                    {
                        "name": "TenantId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Id of the tenant where to get the categories"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return the list of categories of the tenant",
                        "schema": {
                            "$ref": "#/definitions/CategoriesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/GenericError"
                        }
                    },
                    "401":{
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Unauthorized"
                        }
                    }
                },
                "security": [
                    {
                        "2_tleAXoqbb": []
                    }
                ],
                "x-amazon-apigateway-integration": {
                    "httpMethod": "POST",
                    "uri": "arn:aws:apigateway:eu-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-2:574522373582:function:api-progetto-dev-getTenantLanguages/invocations",
                    "passthroughBehavior": "when_no_match",
                    "type": "aws_proxy"
                }
            }
        },
        "/tenant/create": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "Tenant",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Tenant"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Confirm tenant creation",
                        "schema": {
                            "$ref": "#/definitions/Tenant"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/GenericError"
                        }
                    },
                    "401":{
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Unauthorized"
                        }
                    }
                },
                "security": [
                    {
                        "2_tleAXoqbb": []
                    }
                ],
                "x-amazon-apigateway-request-validator": "api-progetto-dev | Validate request body and querystring parameters",
                "x-amazon-apigateway-integration": {
                    "httpMethod": "POST",
                    "uri": "arn:aws:apigateway:eu-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-2:574522373582:function:api-progetto-dev-addTenant/invocations",
                    "passthroughBehavior": "when_no_match",
                    "type": "aws_proxy"
                },
                "description": "Create a new tenant."
            }
        },
        "/tenant/{TenantId}/addLanguage": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "TenantId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Id of the tenant where to add the language"
                    },
                    {
                        "in": "body",
                        "name": "Language",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Language"
                        },
                        "description": "Language to add"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Confirm language creation",
                        "schema": {
                            "$ref": "#/definitions/AddLanguagesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/GenericError"
                        }
                    },
                    "401":{
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Unauthorized"
                        }
                    }
                },
                "security": [
                    {
                        "2_tleAXoqbb": []
                    }
                ],
                "x-amazon-apigateway-request-validator": "api-progetto-dev | Validate request body and querystring parameters",
                "x-amazon-apigateway-integration": {
                    "httpMethod": "POST",
                    "uri": "arn:aws:apigateway:eu-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-2:574522373582:function:api-progetto-dev-addLanguage/invocations",
                    "passthroughBehavior": "when_no_match",
                    "type": "aws_proxy"
                },
                "description": "Add a language to a tenant."
            }
        },
        "/tenant/{TenantId}": {
            "delete": {
                "parameters": [
                    {
                        "name": "TenantId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Id of the tenant to delete"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Confirm tenant deletion",
                        "schema": {
                            "$ref": "#/definitions/TenantDeleteResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/GenericError"
                        }
                    },
                    "401":{
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Unauthorized"
                        }
                    }
                },
                "security": [
                    {
                        "2_tleAXoqbb": []
                    }
                ],
                "x-amazon-apigateway-integration": {
                    "httpMethod": "POST",
                    "uri": "arn:aws:apigateway:eu-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-2:574522373582:function:api-progetto-dev-deleteTenant/invocations",
                    "passthroughBehavior": "when_no_match",
                    "type": "aws_proxy"
                },
                "description": "Delete a tenant."
            }
        },
        "/tenant/{TenantId}/language/{Language}": {
            "delete": {
                "description": "Remove a language from a tenant.",
                "parameters": [
                    {
                        "name": "TenantId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Id of the tenant where to remove the language"
                    },
                    {
                        "name": "LanguageId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Id of the language to remove"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Confirm language deletion",
                        "schema": {
                            "$ref": "#/definitions/Tenant"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/GenericError"
                        }
                    },
                    "401":{
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Unauthorized"
                        }
                    }
                },
                "security": [
                    {
                        "2_tleAXoqbb": []
                    }
                ],
                "x-amazon-apigateway-integration": {
                    "httpMethod": "POST",
                    "uri": "arn:aws:apigateway:eu-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-2:574522373582:function:api-progetto-dev-removeLanguage/invocations",
                    "passthroughBehavior": "when_no_match",
                    "type": "aws_proxy"
                }
            }
        },
        "/tenant/{TenantId}/{Category}/category": {
            "delete": {
                "parameters": [
                    {
                        "name": "TenantId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Id of the tenant where to remove the category"
                    },
                    {
                        "name": "Category",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Id of the category to remove"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Confirm category deletion"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/GenericError"
                        }
                    },
                    "401":{
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Unauthorized"
                        }
                    }
                },
                "security": [
                    {
                        "2_tleAXoqbb": []
                    }
                ],
                "x-amazon-apigateway-integration": {
                    "httpMethod": "POST",
                    "uri": "arn:aws:apigateway:eu-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-2:574522373582:function:api-progetto-dev-removeCategory/invocations",
                    "passthroughBehavior": "when_no_match",
                    "type": "aws_proxy"
                }
            }
        },
        "/text/{TenantId}/category/{Category}/{Title}/originalText": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "TenantId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Id of the tenant where to get the texts"
                    },
                    {
                        "name": "Category",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Category of the text to update"
                    },
                    {
                        "name": "Title",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Title of the text to update"
                    },
                    {
                        "in": "body",
                        "name": "TextBody",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/editTextModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 response"
                    },
                    "400": {
                        "description": "400 response",
                        "schema": {
                            "$ref": "#/definitions/GenericError"
                        }
                    },
                    "401": {
                        "description": "401 response",
                        "schema": {
                            "$ref": "#/definitions/Unauthorized"
                        }
                    }
                },
                "security": [
                    {
                        "2_tleAXoqbb": []
                    }
                ],
                "x-amazon-apigateway-request-validator": "api-progetto-dev | Validate request body and querystring parameters",
                "x-amazon-apigateway-integration": {
                    "httpMethod": "POST",
                    "uri": "arn:aws:apigateway:eu-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-2:574522373582:function:api-progetto-dev-putOriginalText/invocations",
                    "passthroughBehavior": "when_no_match",
                    "type": "aws_proxy"
                }
            },
            "delete": {
                "parameters": [
                    {
                        "name": "TenantId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Id of the tenant where to remove the category"
                    },
                    {
                        "name": "Category",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Category of the text to remove"
                    },
                    {
                        "name": "Title",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Title of the text to remove"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Confirm text removed"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/GenericError"
                        }
                    },
                    "401":{
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Unauthorized"
                        }
                    }
                },
                "security": [
                    {
                        "2_tleAXoqbb": []
                    }
                ],
                "x-amazon-apigateway-integration": {
                    "httpMethod": "POST",
                    "uri": "arn:aws:apigateway:eu-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-2:574522373582:function:api-progetto-dev-removeCategory/invocations",
                    "passthroughBehavior": "when_no_match",
                    "type": "aws_proxy"
                }
            }
        },
        "/text/{TenantId}/{Language}/state/rejectedTexts":{
            "get": {
                "description": "Get all the rejected texts of the tenant",
                "parameters": [
                    {
                        "name": "TenantId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Id of the tenant where to get the texts"
                    },
                    {
                        "name": "Language",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Language of the texts to get"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return the list of texts of the tenant",
                        "schema": {
                            "$ref": "#/definitions/TextArray"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/GenericError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Unauthorized"
                        }
                    }
                },
                "security": [
                    {
                        "2_tleAXoqbb": []
                    }
                ],
                "x-amazon-apigateway-integration": {
                    "httpMethod": "POST",
                    "uri": "arn:aws:apigateway:eu-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-2:574522373582:function:api-progetto-dev-getAllTexts/invocations",
                    "passthroughBehavior": "when_no_match",
                    "type": "aws_proxy"
                }
            }
        },
        "/text/{TenantId}/{Language}/state/toBeTranslated":{
            "get": {
                "description": "Get all the texts to be translated of the tenant",
                "parameters": [
                    {
                        "name": "TenantId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Id of the tenant where to get the texts"
                    },
                    {
                        "name": "Language",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Language of the texts to get"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return the list of texts of the tenant",
                        "schema": {
                            "$ref": "#/definitions/TextArray"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/GenericError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Unauthorized"
                        }
                    }
                },
                "security": [
                    {
                        "2_tleAXoqbb": []
                    }
                ],
                "x-amazon-apigateway-integration": {
                    "httpMethod": "POST",
                    "uri": "arn:aws:apigateway:eu-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-2:574522373582:function:api-progetto-dev-getAllTexts/invocations",
                    "passthroughBehavior": "when_no_match",
                    "type": "aws_proxy"
                }
            }
        },
        "/text/{TenantId}/{Language}/state/verified":{
            "get": {
                "description": "Get all the verified texts of the tenant",
                "parameters": [
                    {
                        "name": "TenantId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Id of the tenant where to get the texts"
                    },
                    {
                        "name": "Language",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Language of the texts to get"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return the list of texts of the tenant",
                        "schema": {
                            "$ref": "#/definitions/TextArray"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/GenericError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Unauthorized"
                        }
                    }
                },
                "security": [
                    {
                        "2_tleAXoqbb": []
                    }
                ],
                "x-amazon-apigateway-integration": {
                    "httpMethod": "POST",
                    "uri": "arn:aws:apigateway:eu-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-2:574522373582:function:api-progetto-dev-getAllTexts/invocations",
                    "passthroughBehavior": "when_no_match",
                    "type": "aws_proxy"
                }
            }
        },
        "/text/{TenantId}/{Language}/state/toBeVerified":{
            "get": {
                "description": "Get all the texts to be verified of the tenant",
                "parameters": [
                    {
                        "name": "TenantId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Id of the tenant where to get the texts"
                    },
                    {
                        "name": "Language",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Language of the texts to get"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return the list of texts of the tenant",
                        "schema": {
                            "$ref": "#/definitions/TextArray"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/GenericError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Unauthorized"
                        }
                    }
                },
                "security": [
                    {
                        "2_tleAXoqbb": []
                    }
                ],
                "x-amazon-apigateway-integration": {
                    "httpMethod": "POST",
                    "uri": "arn:aws:apigateway:eu-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-2:574522373582:function:api-progetto-dev-getAllTexts/invocations",
                    "passthroughBehavior": "when_no_match",
                    "type": "aws_proxy"
                }
            }
        },
        "/text/{TenantId}/allTexts": {
            "get": {
                "description": "Get all the texts of a tenant",
                "parameters": [
                    {
                        "name": "TenantId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Id of the tenant where to get the texts"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return the list of texts of the tenant",
                        "schema": {
                            "$ref": "#/definitions/TextArray"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/GenericError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Unauthorized"
                        }
                    }
                },
                "security": [
                    {
                        "2_tleAXoqbb": []
                    }
                ],
                "x-amazon-apigateway-integration": {
                    "httpMethod": "POST",
                    "uri": "arn:aws:apigateway:eu-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-2:574522373582:function:api-progetto-dev-getAllTexts/invocations",
                    "passthroughBehavior": "when_no_match",
                    "type": "aws_proxy"
                }
            }
        },
        "/text/{TenantId}/{Language}/{Category}/{Title}/text":{
          "get":{
            "parameters":[
              {
                "name":"TenantId",
                "in":"path",
                "required":true,
                "type":"string",
                "description":"Id of the tenant where to get the texts"
              },
              {
                "name":"Language",
                "in":"path",
                "required":true,
                "type":"string",
                "description":"Language of the text to get"
              },
              {
                "name":"Category",
                "in":"path",
                "required":true,
                "type":"string",
                "description":"Category of the text to get"
              },
              {
                "name":"Title",
                "in":"path",
                "required":true,
                "type":"string",
                "description":"Title of the text to get"
              }
            ],
            "responses":{
              "200":{
                "description":"Return the text of the tenant",
                "schema":{
                  "$ref": "#/definitions/SingleText"
                }
              },
              "400":{
                "description":"Bad Request",
                "schema":{
                  "$ref":"#/definitions/GenericError"
                }
              },
              "401":{
                "description":"Unauthorized",
                "schema":{
                  "$ref":"#/definitions/Unauthorized"
                }
              }
            },
            "security":[
              {
                "2_tleAXoqbb":[]
              }
            ],
            "x-amazon-apigateway-integration":{
              "httpMethod":"POST",
              "uri":"arn:aws:apigateway:eu-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-2:574522373582:function:api-progetto-dev-getText/invocations",
              "passthroughBehavior":"when_no_match",
              "type":"aws_proxy"
            }
          }  
        },
        "/text/{TenantId}/category/{Category}/{Title}/translationLanguages":{
            "get":{
                "parameters":[
                    {
                        "name":"TenantId",
                        "in":"path",
                        "required":true,
                        "type":"string",
                        "description":"Id of the tenant where to get the texts  translationLanguages"
                    },
                    {
                        "name":"Category",
                        "in":"path",
                        "required":true,
                        "type":"string",
                        "description":"Category of the text to get"
                    },
                    {
                        "name":"Title",
                        "in":"path",
                        "required":true,
                        "type":"string",
                        "description":"Title of the text to get"
                    }
                ],
                "responses":{
                  "200":{
                    "description":"Return the translations languages of the text"
                  },
                  "400":{
                    "description":"Bad Request",
                    "schema":{
                      "$ref":"#/definitions/GenericError"
                    }
                  },
                  "401":{
                    "description":"Unauthorized",
                    "schema":{
                      "$ref":"#/definitions/Unauthorized"
                    }
                  }
                },
                "security":[
                  {
                    "2_tleAXoqbb":[]
                  }
                ],
                "x-amazon-apigateway-integration":{
                  "httpMethod":"POST",
                  "uri":"arn:aws:apigateway:eu-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-2:574522373582:function:api-progetto-dev-getText/invocations",
                  "passthroughBehavior":"when_no_match",
                  "type":"aws_proxy"
                }
            }  
        },
        "/text/{TenantId}/originalText":{
            "post": {
                "parameters": [
                    {
                        "name": "TenantId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Id of the tenant where to get the texts"
                    },
                    {
                        "name": "BodyText",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PostText"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Confirm the post of the text"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/GenericError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Unauthorized"
                        }
                    }
                }
            }

        },
        "/text/{TenantId}/{Language}/{Category}/{Title}/translation": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "TenantId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Tenant Id of the text to be translated"
                    },
                    {
                        "name": "Language",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Language of the text to be translated"
                    },
                    {
                        "name": "Category",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Category of the text to be translated"
                    },
                    {
                        "name": "Title",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Title of the text to be translated"
                    },
                    {
                        "in": "body",
                        "name": "Translation Body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/putTranslation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Confirm translation"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/GenericError"
                        }
                    },
                    "401":{
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Unauthorized"
                        }
                    }
                },
                "security": [
                    {
                        "2_tleAXoqbb": []
                    }
                ],
                "x-amazon-apigateway-request-validator": "api-progetto-dev | Validate request body and querystring parameters",
                "x-amazon-apigateway-integration": {
                    "httpMethod": "POST",
                    "uri": "arn:aws:apigateway:eu-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-2:574522373582:function:api-progetto-dev-putTranslation/invocations",
                    "passthroughBehavior": "when_no_match",
                    "type": "aws_proxy"
                }
            }
        },
        "/text/{TenantId}/{Language}/{Category}/{Title}/approveTranslation": {
            "put": {
                "description": "Approve a translation",
                "parameters": [
                    {
                        "name": "TenantId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Tenant Id of the text to be approved"
                    },
                    {
                        "name": "Language",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Language of the text to be approved"
                    },
                    {
                        "name": "Category",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Category of the text to be approved"
                    },
                    {
                        "name": "Title",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Title of the text to be approved"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Confirm the approval of the text"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/GenericError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Unauthorized"
                        }
                    }
                },
                "security": [
                    {
                        "2_tleAXoqbb": []
                    }
                ],
                "x-amazon-apigateway-integration": {
                    "httpMethod": "POST",
                    "uri": "arn:aws:apigateway:eu-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-2:574522373582:function:api-progetto-dev-putAcceptText/invocations",
                    "passthroughBehavior": "when_no_match",
                    "type": "aws_proxy"
                }
            }
        },
        "/text/{TenantId}/{Language}/{Category}/{Title}/rejectTranslation": {
            "put": {
                "description": "Reject a translation",
                "parameters": [
                    {
                        "name": "TenantId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Tenant Id of the text to be rejected"
                    },
                    {
                        "name": "Language",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Language of the text to be rejected"
                    },
                    {
                        "name": "Category",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Category of the text to be rejected"
                    },
                    {
                        "name": "Title",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Title of the text to be rejected"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Confirm the rejection of the text"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/GenericError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Unauthorized"
                        }
                    }
                },
                "security": [
                    {
                        "2_tleAXoqbb": []
                    }
                ],
                "x-amazon-apigateway-integration": {
                    "httpMethod": "POST",
                    "uri": "arn:aws:apigateway:eu-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-2:574522373582:function:api-progetto-dev-putAcceptText/invocations",
                    "passthroughBehavior": "when_no_match",
                    "type": "aws_proxy"
                }
            }
        },
        "/user/resetPassword":{
            "get": {
                "description": "Get the reset code for the user",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "UserBody",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/resetPassword"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 response"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/GenericError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Unauthorized"
                        }
                    }
                },
                "security": [
                    {
                        "2_tleAXoqbb": []
                    }
                ],
                "x-amazon-apigateway-integration": {
                    "httpMethod": "POST",
                    "uri": "arn:aws:apigateway:eu-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-2:574522373582:function:api-progetto-dev-getUsers/invocations",
                    "passthroughBehavior": "when_no_match",
                    "type": "aws_proxy"
                }
            }
        },
        "/user/{Username}/getResetCode":{
            "get": {
                "description": "Get the reset code for the user",
                "parameters": [
                    {
                        "name": "Username",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The username of the user"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 response"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/GenericError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Unauthorized"
                        }
                    }
                },
                "security": [
                    {
                        "2_tleAXoqbb": []
                    }
                ],
                "x-amazon-apigateway-integration": {
                    "httpMethod": "POST",
                    "uri": "arn:aws:apigateway:eu-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-2:574522373582:function:api-progetto-dev-getUsers/invocations",
                    "passthroughBehavior": "when_no_match",
                    "type": "aws_proxy"
                }
            }
        },
        "/user/getUsers": {
            "get": {
                "description": "Get all the users registered in the system",
                "responses": {
                    "200": {
                        "description": "200 response",
                        "schema": {
                            "$ref": "#/definitions/TenantUsers"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/GenericError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Unauthorized"
                        }
                    }
                },
                "security": [
                    {
                        "2_tleAXoqbb": []
                    }
                ],
                "x-amazon-apigateway-integration": {
                    "httpMethod": "POST",
                    "uri": "arn:aws:apigateway:eu-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-2:574522373582:function:api-progetto-dev-getUsers/invocations",
                    "passthroughBehavior": "when_no_match",
                    "type": "aws_proxy"
                }
            }
        },
        "/user/{Username}/adminGetUser": {
            "get": {
                "description": "Get all the user's information",
                "parameters": [
                    {
                        "name": "Username",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Username of the user to get"
                    }
                ],
                "responses": {
                    "200":{
                        "description": "200 response",
                        "schema": {
                            "$ref": "#/definitions/TenantUsers"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/GenericError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Unauthorized"
                        }
                    }
                },
                "security": [
                    {
                        "2_tleAXoqbb": []
                    }
                ],
                "x-amazon-apigateway-integration": {
                    "httpMethod": "POST",
                    "uri": "arn:aws:apigateway:eu-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-2:574522373582:function:api-progetto-dev-admGetUser/invocations",
                    "passthroughBehavior": "when_no_match",
                    "type": "aws_proxy"
                }
            }
        },
        "/user/{Username}/tenant": {
            "get": {
                "description": "Get the tenant of a user",
                "parameters": [
                    {
                        "name": "Username",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "UserId of the user to get the tenant of"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 response",
                        "schema": {
                            "$ref": "#/definitions/Tenant"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/GenericError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized Access",
                        "schema": {
                            "$ref": "#/definitions/Unauthorized"
                        }
                    }
                },
                "security": [
                    {
                        "2_tleAXoqbb": []
                    }
                ],
                "x-amazon-apigateway-integration": {
                    "httpMethod": "POST",
                    "uri": "arn:aws:apigateway:eu-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-2:574522373582:function:api-progetto-dev-getUserTenant/invocations",
                    "passthroughBehavior": "when_no_match",
                    "type": "aws_proxy"
                }
            }
        },
        "/user/{Username}/delete": {
            "delete": {
                "description": "Delete a user",
                "parameters": [
                    {
                        "name": "Username",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Username of the user to delete"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 response"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/GenericError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Unauthorized"
                        }
                    }
                },
                "security": [
                    {
                        "2_tleAXoqbb": []
                    }
                ],
                "x-amazon-apigateway-integration": {
                    "httpMethod": "POST",
                    "uri": "arn:aws:apigateway:eu-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-2:574522373582:function:api-progetto-dev-deleteUser/invocations",
                    "passthroughBehavior": "when_no_match",
                    "type": "aws_proxy"
                }
            }
        },
        "/user/create/{TenantId}": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "UserBody",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserBody"
                        }
                    }
                ],
                "responses": {
                    "200":{
                        "description": "200 response",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/GenericError"
                        }
                    },
                    "401":{
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Unauthorized"
                        }
                    }
                },
                "security": [
                    {
                        "2_tleAXoqbb": []
                    }
                ],
                "x-amazon-apigateway-request-validator": "api-progetto-dev | Validate request body and querystring parameters",
                "x-amazon-apigateway-integration": {
                    "httpMethod": "POST",
                    "uri": "arn:aws:apigateway:eu-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-2:574522373582:function:api-progetto-dev-signUpUser/invocations",
                    "passthroughBehavior": "when_no_match",
                    "type": "aws_proxy"
                }
            }
        },
        "/tenant/{TenantId}/Languages": {
            "get": {
                "parameters": [
                    {
                        "name": "TenantId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Id of the tenant where to get all the languages"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return the list of all the languages of the tenant",
                        "schema": {
                            "$ref": "#/definitions/AddLanguagesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/GenericError"
                        }
                    },
                    "401":{
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Unauthorized"
                        }
                    }
                },
                "security":
                    [
                        {
                            "ApiKeyAuth": []
                        }
                    ],
                "x-amazon-apigateway-integration": {
                    "httpMethod": "POST",
                    "uri": "arn:aws:apigateway:eu-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-2:574522373582:function:api-progetto-dev-getTenantLanguages/invocations",
                    "passthroughBehavior": "when_no_match",
                    "type": "aws_proxy"
                },
                "description": "Get the list of languages of a tenant."
            }
        },
        "/text/{TenantId}/{Language}/{Category}/{Title}":{
            "get":{
              "parameters":[
                {
                  "name":"TenantId",
                  "in":"path",
                  "required":true,
                  "type":"string",
                  "description":"Id of the tenant where to get the texts"
                },
                {
                  "name":"Language",
                  "in":"path",
                  "required":true,
                  "type":"string",
                  "description":"Language of the text to get"
                },
                {
                  "name":"Category",
                  "in":"path",
                  "required":true,
                  "type":"string",
                  "description":"Category of the text to get"
                },
                {
                  "name":"Title",
                  "in":"path",
                  "required":true,
                  "type":"string",
                  "description":"Title of the text to get"
                }
              ],
              "responses":{
                "200":{
                  "description":"Return the text of the tenant",
                  "schema":{
                    "$ref": "#/definitions/SingleText"
                  }
                },
                "400":{
                  "description":"Bad Request",
                  "schema":{
                    "$ref":"#/definitions/GenericError"
                  }
                },
                "401":{
                  "description":"Unauthorized",
                  "schema":{
                    "$ref":"#/definitions/Unauthorized"
                  }
                }
              },
              "security":[
                {
                  "ApiKeyAuth":[]
                }
              ],
              "x-amazon-apigateway-integration":{
                "httpMethod":"POST",
                "uri":"arn:aws:apigateway:eu-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-2:574522373582:function:api-progetto-dev-getText/invocations",
                "passthroughBehavior":"when_no_match",
                "type":"aws_proxy"
              }
            }  
          }
    },
    "securityDefinitions": {
        "2_tleAXoqbb": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header",
            "x-amazon-apigateway-authtype": "cognito_user_pools",
            "x-amazon-apigateway-authorizer": {
                "providerARNs": [
                    "arn:aws:cognito-idp:eu-west-2:574522373582:userpool/eu-west-2_tleAXoqbb"
                ],
                "type": "cognito_user_pools"
            }
        },
        "ApiKeyAuth":{
            "type": "apiKey",
            "name": "x-api-key",
            "in": "header"
        }
    },
    "definitions": {
        "UserId": {
            "type": "object",
            "required": [
                "User"
            ],
            "properties": {
                "User": {
                    "type": "string"
                }
            }
        },
        "UserBody": {
            "type": "object",
            "required": [
                "Email",
                "Password",
                "Name",
                "Surname",
                "Group"
            ],
            "properties": {
                "Email": {
                    "type": "string"
                },
                "Password": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Surname": {
                    "type": "string"
                },
                "Group": {
                    "type": "string"
                }
            }
        },
        "editTextModel": {
            "type": "object",
            "required": [
                "Category",
                "Text",
                "Comment",
                "Link",
                "Languages"
            ],
            "properties": {
                "Category": {
                    "type": "string"
                },
                "Text": {
                    "type": "string"
                },
                "Comment": {
                    "type": "string"
                },
                "Link": {
                    "type": "string"
                },
                "Languages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "Unauthorized":{
            "type": "object",
            "required": [
                "message"
            ],
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Unauthorized"
                }
            }
        },
        "GenericError":{
            "type": "object",
            "required": [
                "message"
            ],
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "Tenant": {
            "type": "object",
            "required": [
                "admins",
                "creationDate",
                "defaultLanguage",
                "languages",
                "tenantName",
                "users"
            ],
            "properties": {
                "tenantName": {
                    "type": "string"
                },
                "languages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "defaultLanguage": {
                    "type": "string"
                },
                "admins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "creationDate": {
                    "type": "number"
                },
                "id":{ "type": "string"},
                "users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "Tenants": {
            "type": "array",
            "items": {
                "type": "object",
                "required": [
                    "admins",
                    "creationDate",
                    "defaultLanguage",
                    "languages",
                    "tenantName",
                    "users"
                ],
                "properties": {
                    "defaultLanguage": {
                        "type": "string"
                    },
                    "tenantName": {
                        "type": "string"
                    },
                    "languages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "creationDate": {
                        "type": "number"
                    },
                    "admins": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "Language": {
            "type": "object",
            "required": [
                "Language"
            ],
            "properties": {
                "Language": {
                    "type": "string"
                }
            }
        },
        "AddLanguagesResponse": {
            "type": "object",
            "required": [
                "Languages"
            ],
            "properties": {
                "languages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "TenantDeleteResponse":{
            "type": "object",
            "required": [
                "message"
            ],
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Tenant deleted"
                }
            }
        },
        "TenantAdmins":{
            "type": "object",
            "properties": {
                "Admins": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "Username": {
                                "type": "string"
                            },
                            "UserAttributes": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "Name": {
                                            "type": "string"
                                        },
                                        "Value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "UserCreateDate": {
                                "type": "string"
                            },
                            "UserLastModifiedDate": {
                                "type": "string"
                            },
                            "Enabled": {
                                "type": "boolean"
                            },
                            "UserStatus": {
                                "type": "string",
                                "enum": [
                                    "CONFIRMED",
                                    "UNCONFIRMED",
                                    "RESET_REQUIRED",
                                    "FORCE_CHANGE_PASSWORD"
                                ]
                            }
                        }
                    }
                }
            }
        },
        "User":{
            "type": "object",
            "properties": {
                "Username": {
                    "type": "string"
                },
                "UserAttributes": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "Name": {
                                "type": "string"
                            },
                            "Value": {
                                "type": "string"
                            }
                        }
                    }
                },
                "UserCreateDate": {
                    "type": "string"
                },
                "UserLastModifiedDate": {
                    "type": "string"
                },
                "Enabled": {
                    "type": "boolean"
                },
                "UserStatus": {
                    "type": "string",
                    "enum": [
                        "CONFIRMED",
                        "UNCONFIRMED",
                        "RESET_REQUIRED",
                        "FORCE_CHANGE_PASSWORD"
                    ]
                }
            }
        },
        "TenantUsers":{
            "type": "object",
            "properties": {
                "Users": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "Username": {
                                "type": "string"
                            },
                            "UserAttributes": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "Name": {
                                            "type": "string"
                                        },
                                        "Value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "UserCreateDate": {
                                "type": "string"
                            },
                            "UserLastModifiedDate": {
                                "type": "string"
                            },
                            "Enabled": {
                                "type": "boolean"
                            },
                            "UserStatus": {
                                "type": "string",
                                "enum": [
                                    "CONFIRMED",
                                    "UNCONFIRMED",
                                    "RESET_REQUIRED",
                                    "FORCE_CHANGE_PASSWORD"
                                ]
                            }
                        }
                    }
                }
            }
        },
        "TextArray":{
            "type": "object",
            "properties": {
                "Texts": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "idTenant": {
                                "type": "string"
                            },
                            "language": {
                                "type": "string"
                            },
                            "category": {
                                "type":"array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "title": {
                                "type": "string"
                            },
                            "text": {
                                "type": "string"
                            },
                            "state":{
                                "type": "integer",
                                "enum": [
                                    "testoOriginale",
                                    "daTradurre",
                                    "daVerificare",
                                    "verificato",
                                    "rifiutato"
                                ]
                            },
                            "comment":{
                                "type": "string"
                            },
                            "link":{
                                "type": "string"
                            },
                            "feedback":{
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "CategoriesResponse":{
            "type": "object",
            "properties": {
                "Categories": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "resetPassword":{
            "type": "object",
            "properties": {
                "Username": {
                    "type": "string"
                },
                "Code": {
                    "type": "string"
                },
                "Password": {
                    "type": "string"
                }
            }
        },
        "SingleText":{
            "type": "object",
            "properties": {
                "idTenant": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "category": {
                    "type":"array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            }
                        }
                    }
                },
                "title": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "state":{
                    "type": "integer",
                    "enum": [
                        "testoOriginale",
                        "daTradurre",
                        "daVerificare",
                        "verificato",
                        "rifiutato"
                    ]
                },
                "comment":{
                    "type": "string"
                },
                "link":{
                    "type": "string"
                },
                "feedback":{
                    "type": "string"
                }
            }
        },
        "PostText":{
            "type": "object",
            "properties": {
                "Title": {
                    "type": "string"
                },
                "Category": {
                    "type": "string"
                },
                "Text": {
                    "type": "string"
                },
                "Comment": {
                    "type": "string"
                },
                "Link":{
                    "type": "string"
                },
                "Languages":{
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "putTranslation":{
            "type": "object",
            "properties": {
                "Text": {
                    "type": "string"
                }
            }
        }
    },
    "x-amazon-apigateway-request-validators": {
        "api-progetto-dev | Validate request body and querystring parameters": {
            "validateRequestParameters": true,
            "validateRequestBody": true
        }
    },
    "x-amazon-apigateway-minimum-compression-size": 1024
}